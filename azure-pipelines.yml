# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

variables:  
  buildConfiguration: 'Release'
  MAVEN_CACHE_FOLDER: '$(Pipeline.Workspace)/.m2/repository'
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

stages:
  - stage:
    displayName: 'Build application'
    jobs:
      - job:
        pool:
          vmImage: ubuntu-latest
        steps:
        - task: Cache@2
          displayName: 'Cache Maven local repo'
          inputs:
            key: 'maven | "$(Agent.OS)" | **/pom.xml'
            restoreKeys: |
              maven | "$(Agent.OS)"
              maven
            path: $(MAVEN_CACHE_FOLDER)
        - task: Maven@3
          inputs:
            mavenPomFile: 'pom.xml'
            mavenOptions: '-Xmx3072m'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.11'
            jdkArchitectureOption: 'x64'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            goals: 'package'
            mavenAuthenticateFeed: true
            options: '$(MAVEN_OPTS)'
        - task: CopyFiles@2
          displayName: 'Copy jar generate to pipeline artifacts'
          inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)/target/'
            Contents: '*.jar'
            TargetFolder: '$(build.artifactstagingdirectory)/$(buildConfiguration)'
            CleanTargetFolder: true
        - task: PublishBuildArtifacts@1
          displayName: 'Publish artifact to release'
          condition: succeeded()